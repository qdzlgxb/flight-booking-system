name: 构建和发布Docker镜像

on:
  push:
    tags:
      - 'v*'  # 当推送标签时触发，如 v1.0.0
  workflow_dispatch:  # 允许手动触发

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 登录到Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 提取元数据
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: 构建和推送Docker镜像
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: 生成发布说明
      id: release_notes
      run: |
        echo "release_body<<EOF" >> $GITHUB_OUTPUT
        echo "## 🚀 航班购票系统 - 版本 ${{ github.ref_name }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### 📦 Docker 镜像" >> $GITHUB_OUTPUT
        echo "- 镜像地址: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}\`" >> $GITHUB_OUTPUT
        echo "- 支持架构: linux/amd64, linux/arm64" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### 🐳 快速部署" >> $GITHUB_OUTPUT
        echo "\`\`\`bash" >> $GITHUB_OUTPUT
        echo "# 拉取镜像" >> $GITHUB_OUTPUT
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "# 运行容器" >> $GITHUB_OUTPUT
        echo "docker run -d \\" >> $GITHUB_OUTPUT
        echo "  --name flight-booking-system \\" >> $GITHUB_OUTPUT
        echo "  -p 8080:8080 \\" >> $GITHUB_OUTPUT
        echo "  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> $GITHUB_OUTPUT
        echo "\`\`\`" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### 📋 功能特性" >> $GITHUB_OUTPUT
        echo "- ✈️ 航班信息查询和预订" >> $GITHUB_OUTPUT
        echo "- 👤 用户认证和权限管理" >> $GITHUB_OUTPUT
        echo "- 🎨 现代化的前端界面" >> $GITHUB_OUTPUT
        echo "- 🛡️ 安全的后端API接口" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### 🔧 技术栈" >> $GITHUB_OUTPUT
        echo "- **前端**: React + TypeScript + Vite" >> $GITHUB_OUTPUT
        echo "- **后端**: Spring Boot + Spring Security + JPA" >> $GITHUB_OUTPUT
        echo "- **数据库**: MySQL" >> $GITHUB_OUTPUT
        echo "- **容器**: Spring Boot 内嵌 Tomcat + OpenJDK 17" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: 创建Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: 航班购票系统 ${{ github.ref_name }}
        body: ${{ steps.release_notes.outputs.release_body }}
        draft: false
        prerelease: false
        
    - name: 构建摘要
      run: |
        echo "## 🎉 构建完成!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 构建信息" >> $GITHUB_STEP_SUMMARY
        echo "- **版本**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **镜像**: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **构建时间**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 部署命令" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker run -d --name flight-booking-system -p 8080:8080 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY 